{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/photo-detail/photo-detail.component.css","webpack:///./src/app/photo-detail/photo-detail.component.html","webpack:///./src/app/photo-detail/photo-detail.component.ts","webpack:///./src/app/ranking/ranking.component.css","webpack:///./src/app/ranking/ranking.component.html","webpack:///./src/app/ranking/ranking.component.ts","webpack:///./src/app/sig-up/sig-up.component.css","webpack:///./src/app/sig-up/sig-up.component.html","webpack:///./src/app/sig-up/sig-up.component.ts","webpack:///./src/app/storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet ></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'site';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SigUpComponent } from './sig-up/sig-up.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { PhotoDetailComponent } from './photo-detail/photo-detail.component';\nimport { RankingComponent } from './ranking/ranking.component';\n\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  { path: 'photo/:id', component: PhotoDetailComponent },\n  { path: 'login', component: LoginComponent},\n  { path: 'sigup', component: SigUpComponent},\n  { path: 'ranking', component: RankingComponent},\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: '**', redirectTo: '/login', pathMatch: 'full' },\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SigUpComponent,\n    PhotoDetailComponent,\n    RankingComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\r\\n.icon{\\r\\n    -webkit-appearance: none; \\r\\n    font-size:48px;\\r\\n    padding: 1%;\\r\\n}\\r\\n\\r\\ninput[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.album{\\r\\n    position: relative;\\r\\n    padding-top: 5%;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    width: 18rem;\\r\\n}\\r\\n\\r\\n.pointer{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.center{\\r\\n    margin-top:2px;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n            <h1>Photo Contest, welcome {{this.user.username}}</h1>\\n        </div>\\n        <div class=\\\"col-md-4 text-right\\\">\\n            <i type=\\\"submit\\\" class=\\\"fas fa-trophy icon\\\" (click)=\\\"this.router.navigate(['/ranking']);\\\"></i>\\n            <i type=\\\"submit\\\" class=\\\"fas fas fa-sign-out-alt icon\\\" (click)=\\\"logout()\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Insert url\\\" aria-label=\\\"Insert url\\\" value={{fileName}}>\\n                <div class=\\\"input-group-append\\\">\\n                    <label for=\\\"file-upload\\\" class=\\\"btn btn-outline-secondary yellow\\\">\\n                        <i class=\\\"fa fa-cloud-upload\\\"></i> Browser\\n                    </label>\\n                    <input id=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\" />\\n                    <button class=\\\"btn btn-outline-secondary yellow\\\" type=\\\"submit\\\" [disabled]=\\\"uploadDisable\\\" (click)=\\\"uploadPhoto()\\\">Upload</button>\\n                    \\n                </div>\\n            </div>\\n        </div>\\n    </div> \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h6 *ngIf=\\\"message\\\">{{message}}</h6>\\n        </div>\\n        <div class=\\\"col-lg-4 col-md-6 album\\\" *ngFor=\\\"let data of arrayPhoto\\\">\\n            <div class=\\\"card\\\">\\n                <a class=\\\"pointer\\\" (click)=\\\"photoDetail(data.ID)\\\" target=\\\"_blank\\\">\\n                    <img class=\\\"card-img-top\\\" src={{data.url}} style=\\\"max-height: 220px; width: 100%;\\\">\\n                </a>\\n                <div class=\\\"card-body\\\" *ngIf=\\\"data.voteiduser == this.user.id\\\">\\n                    <p>User: {{data.username}}</p>\\n                    <p>Average stars: <i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i>{{(data.sumvotes/data.nvotes).toFixed(2)}}</p>\\n                    <p>Users voted: <i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i>{{data.nvotes}}</p>\\n                </div>\\n                <div class=\\\"card-body\\\" *ngIf=\\\"data.voteiduser != this.user.id\\\">\\n                    <p>User: {{data.username}}</p>\\n                    <form #likeForm=\\\"ngForm\\\" (ngSubmit)=\\\"votePhoto(likeForm, data);\\\">\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"data.vote\\\" name=\\\"vote\\\" required>\\n                            <option *ngFor=\\\"let vote of votes\\\" value=\\\"{{vote.value}}\\\">{{vote.value}}</option>\\n                        </select>\\n                        <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"data.ID\\\" />\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-warning yellow center\\\" [disabled]=\\\"data.isDisabled\\\">Vote</button>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../storage.service';\nimport { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n@ViewChild('fileInput')\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  file: File;\n  fileName: string;\n  arrayPhoto;\n  vote: number;\n  votes = [{ \"value\": 1 }, { \"value\": 2 }, { \"value\": 3 }, { \"value\": 4 }, { \"value\": 5 }];\n  user = JSON.parse(sessionStorage.getItem('token'));\n  uploadDisable: boolean = false;\n  message: string = null;\n\n  constructor(private storage: StorageService, private router: Router) {\n    if (!this.user) {\n      this.router.navigateByUrl('/login');\n    }\n    else {\n      this.loadPhoto();\n    }\n  }\n\n  ngOnInit() { }\n\n  loadPhoto() {\n    this.storage.load(this.user.id).then(res => this.arrayPhoto = res);\n  }\n\n  logout() {\n    this.storage.logout();\n    this.router.navigate(['/login']);\n  }\n\n  onFileChange(event) {\n    this.file = event.target.files[0];\n    this.fileName = this.file.name;\n  }\n\n  uploadPhoto() {\n    if (this.file) {\n      this.message = \"We have taken your request\";\n      this.uploadDisable = true;\n      this.storage.upload(this.file, this.user.id).subscribe(() => {\n        setTimeout(() => this.loadPhoto(), 1000);\n        setTimeout(() => this.message = null, 1000);\n        setTimeout(() => this.uploadDisable = false, 1000);\n      }, err => {\n        console.log(\"err\", err);\n      });\n    }\n  }\n\n  votePhoto(data: NgForm, element) {\n    if (data.value.vote && data.valid) {\n      element.isDisabled = true;\n      this.storage.vote(data.value.vote, data.value.id, this.user.id).subscribe(() => {\n        this.loadPhoto();\n      }, err => {\n        console.log(err);\n      });\n    }\n  }\n\n  photoDetail(photo_id: number) {\n    let url: string = \"/photo/\" + photo_id;\n    this.router.navigateByUrl(url);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"d-flex justify-content-center h-100\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3>Sign In</h3>\\n                <div class=\\\"d-flex justify-content-end social_icon\\\">\\n                    <span><i class=\\\"fab fa-facebook-square\\\"></i></span>\\n                    <span><i class=\\\"fab fa-google-plus-square\\\"></i></span>\\n                    <span><i class=\\\"fab fa-twitter-square\\\"></i></span>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm);\\\">\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\"\\n                            ngModel required>\\n\\n                    </div>\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"\\n                            ngModel required>\\n                    </div>\\n                    <div class=\\\"row align-items-center remember\\\">\\n                        <input type=\\\"checkbox\\\">Remember Me\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn float-right yellow\\\">\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"d-flex justify-content-center links\\\">\\n                    Don't have an account?<a href=\\\"/sigup\\\">Sign Up</a>\\n                </div>\\n                <div class=\\\"d-flex justify-content-center\\\">\\n                    <a href=\\\"#\\\">Forgot your password?</a>\\n                </div>\\n            <div class=\\\"alert alert-danger form-group\\\" role=\\\"alert\\\" *ngIf=\\\"loginAlert\\\">{{loginAlert}}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { StorageService } from '../storage.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private storage: StorageService, private router: Router) { }\n  loginAlert: string = null;\n  ngOnInit() { }\n\n  login(data: NgForm) {\n    if (data.valid) {\n      this.storage\n        .login(data.value.username, data.value.password)\n        .subscribe(data => {\n          this.storage.saveToken(data);\n          this.router.navigate(['/home']);\n          this.loginAlert = null;\n        }, err => {\n          this.loginAlert = err.statusText + (err.error.message ? ` - ${err.error.message}` : '');\n        });\n    } else {\n      this.loginAlert = 'One ore more fields missing';\n    }\n  }\n}\n","module.exports = \"img {\\r\\n    border: 5px solid #fff;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n.right{\\r\\n    float: right;\\r\\n}\\r\\n.left{\\r\\n    float:left;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngFor=\\\"let data of photo\\\">\\n    <div class=\\\"col-md-12\\\" >\\n      <h1 class=\\\"left\\\">User: {{data.username}}</h1>\\n      <button class=\\\"btn btn-outline-secondary yellow right\\\" type=\\\"submit\\\" (click)=\\\"back()\\\">Home</button>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n      <p>Average stars: <i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i>{{(data.sumvotes/data.nvotes).toFixed(2)}}</p>\\n      <p>Users voted: <i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i>{{data.nvotes}}</p>\\n      <img class=\\\"card-img-top\\\" src={{data.url}} width=\\\"100%\\\">\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../storage.service';\n@Component({\n  selector: 'app-photo-detail',\n  templateUrl: './photo-detail.component.html',\n  styleUrls: ['./photo-detail.component.css']\n})\nexport class PhotoDetailComponent implements OnInit {\n  id;\n  photo;\n  constructor(private routeid: ActivatedRoute, private storage: StorageService, private router: Router) {\n    this.routeid.params.subscribe(params => {\n      this.id = params['id']\n    });\n    this.loadDetail();\n  }\n\n  ngOnInit() {\n\n  }\n\n  back(){\n    this.router.navigate(['/home']);\n  }\n\n  loadDetail() {\n    this.storage.photo(this.id).then(res => this.photo = res);\n  }\n  \n\n}\n","module.exports = \".album{\\r\\n    position: relative;\\r\\n    padding-top: 5%;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    width: 14rem;\\r\\n}\\r\\n\\r\\n.pointer{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.right{\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.left{\\r\\n    float:left;\\r\\n}\\r\\n\\r\\n.center{\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <h1 class=\\\"left\\\">Rating</h1>\\n      <div class=\\\"right\\\">\\n        <button *ngIf=\\\"!photoUser\\\" class=\\\"btn btn-outline-secondary yellow\\\" type=\\\"submit\\\" (click)=\\\"raking()\\\">Photo</button>\\n        <button *ngIf=\\\"photoUser\\\" class=\\\"btn btn-outline-secondary yellow\\\" type=\\\"submit\\\" (click)=\\\"userraking()\\\">User</button>\\n        <button class=\\\"btn btn-outline-secondary yellow\\\" type=\\\"submit\\\" (click)=\\\"back()\\\">Home</button>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <p *ngIf=\\\"!photos || !users\\\">{{message}}</p> -->\\n  <div class=\\\"row\\\" *ngIf=\\\"photoUser\\\">\\n    <div class=\\\"col-lg-3 col-md-4 col-sm-6 album\\\" *ngFor=\\\"let data of photos;  index as i\\\">\\n      <div class=\\\"card\\\">\\n        <a class=\\\"pointer\\\" (click)=\\\"ViewphotoDetail(data.ID)\\\" target=\\\"_blank\\\">\\n          <img class=\\\"card-img-top\\\" src={{data.url}}>\\n        </a>\\n        <div class=\\\"card-body\\\" *ngIf=\\\"photos\\\">\\n          <p>User: {{data.username}}</p>\\n          <p>Average stars: <i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i>{{(data.sumvotes/data.nvotes).toFixed(2)}}</p>\\n          <p>Users voted: <i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i>{{data.nvotes}}</p>\\n          <p>Postion: <i class=\\\"fas fa-trophy\\\" aria-hidden=\\\"true\\\"></i>{{i+1}} </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"!photoUser\\\">\\n    <div class=\\\"col-lg-12\\\" *ngFor=\\\"let user of users;  index as i\\\">\\n      <p class=\\\"center\\\"><i class=\\\"fas fa-trophy\\\" aria-hidden=\\\"true\\\"></i> {{i+1}}\\n      User: {{user.username}}   \\n      Average stars: <i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i>{{(user.sumvotes/user.nvotes).toFixed(2)}}\\n      Users voted: <i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i>{{user.nvotes}}\\n      Photos: {{user.nphotos}} \\n      </p>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../storage.service';\n\n@Component({\n  selector: 'app-ranking',\n  templateUrl: './ranking.component.html',\n  styleUrls: ['./ranking.component.css']\n})\nexport class RankingComponent implements OnInit {\n  photos: any = null;\n  users: any = null;\n  message: string = \"Ranking not available\";\n  photoUser:boolean = true;\n  constructor(private storage: StorageService, private router: Router) {\n    this.raking();\n  }\n\n\n  ngOnInit() {\n   }\n\n  raking() {\n    this.photoUser = true;\n    this.storage.ranking().then(res => this.photos = res);\n  }\n\n  userraking() {\n    this.photoUser = false;\n    this.storage.userranking().then(res => this.users = res);\n  }\n\n  ViewphotoDetail(photo_id) {\n    let url: string = \"/photo/\" + photo_id;\n    this.router.navigateByUrl(url);\n  }\n  \n  back(){\n    this.router.navigate(['/home']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"d-flex justify-content-center h-100\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3>Sign Up</h3>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <form #sigUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"sigup(sigUpForm);\\\">\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\"\\n                            ngModel required>\\n                    </div>\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"\\n                            ngModel required>\\n                    </div>\\n                    <div class=\\\"input-group form-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-envelope\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"email\\\" id=\\\"eamil\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\" ngModel\\n                            required>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input type=\\\"submit\\\" value=\\\"Sig Up\\\" class=\\\"btn float-right yellow\\\">\\n                    </div>\\n                </form>\\n                <div class=\\\"alert alert-danger form-group\\\" role=\\\"alert\\\" *ngIf=\\\"sigupAlert\\\">{{sigupAlert}}</div>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"d-flex justify-content-center links\\\">\\n                    Do you have an account?<a href=\\\"/login\\\">Sign In</a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { StorageService } from '../storage.service';\n@Component({\n  selector: 'app-sig-up',\n  templateUrl: './sig-up.component.html',\n  styleUrls: ['./sig-up.component.css']\n})\nexport class SigUpComponent implements OnInit {\n\n  constructor(private storage: StorageService, private router: Router) { }\n  sigupAlert: string = null;\n  ngOnInit() {\n  }\n\n  sigup(data: NgForm) {\n    console.log(\"sigup\");\n    if (data.valid) {\n      this.storage\n        .createUser(data.value.username, data.value.password, data.value.email)\n        .subscribe(data => {\n          this.router.navigate(['/login']);\n          this.sigupAlert = null;\n        }, err => {\n          this.sigupAlert = err.statusText + (err.error.message ? ` - ${err.error.message}` : '');\n        });\n    } else {\n      this.sigupAlert = 'One ore more fields missing';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { stringify } from '@angular/core/src/util';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  base_url = \"http://ec2-34-251-72-250.eu-west-1.compute.amazonaws.com:3000\";\n  options;\n  constructor(private http: HttpClient) {\n    this.getToken();\n  }\n\n  getToken() {\n    this.options = { headers: { 'x-access-token': sessionStorage.getItem('token') } };\n  }\n\n  saveToken(token) {\n    sessionStorage.setItem('token', JSON.stringify(token));\n    this.getToken();\n  }\n\n  login(username, password) {\n    return this.http.post(this.base_url + '/login', { username, password });\n  }\n\n  logout() {\n    sessionStorage.clear();\n  }\n\n  createUser(username, password, email) {\n    return this.http.post(this.base_url + '/sigup', { username, password, email });\n  }\n\n  upload(file, user_id) {\n    let formData: FormData = new FormData();\n    formData.append('photo', file, user_id + \"_\" + file.name);\n    return this.http.post(this.base_url + '/upload', formData, this.options);\n  }\n\n  vote(vote, id_photo, id_user) {\n      return this.http.post(this.base_url + '/vote', { vote, id_photo, id_user }, this.options);\n  }\n\n  async load(userid) {\n    let form = JSON.stringify({ \"userid\": userid });\n    return await fetch(this.base_url + '/home', {\n      method: \"POST\",\n      body: form,\n      headers: { 'x-access-token': sessionStorage.getItem('token'), 'Content-Type': 'application/json' }\n    }).then(res => res.json());\n  }\n\n  async photo(idphoto) {\n    let form = JSON.stringify({ \"idphoto\": idphoto });\n    return await fetch(this.base_url + '/photo', {\n      method: \"POST\",\n      body: form,\n      headers: { 'x-access-token': sessionStorage.getItem('token'), 'Content-Type': 'application/json' }\n    }).then(res => res.json());\n  }\n\n  async ranking() {\n    return await fetch(this.base_url + '/ranking', this.options).then(res => res.json());\n  }\n  async userranking() {\n    return await fetch(this.base_url + '/userranking', this.options).then(res => res.json());\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}